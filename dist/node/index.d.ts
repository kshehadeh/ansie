// Generated by dts-bundle-generator v9.3.1

declare enum ValidTags {
	"h1" = "h1",
	"h2" = "h2",
	"h3" = "h3",
	"body" = "body",
	"span" = "span",
	"p" = "p",
	"div" = "div",
	"text" = "text",
	"li" = "li",
	"br" = "br"
}
type CompilerFormat = "ansi" | "markup";
interface AnsieStyle {
	font?: {
		color?: {
			fg?: string;
			bg?: string;
		};
		bold?: boolean;
		underline?: "single" | "double" | "none" | boolean;
		italics?: boolean;
	};
	spacing?: {
		margin?: number;
		marginLeft?: number;
		marginRight?: number;
		marginTop?: number;
		marginBottom?: number;
	};
	list?: {
		bullet?: string;
		indent?: number;
	};
}
interface AnsieTheme {
	[ValidTags.h1]: AnsieStyle;
	[ValidTags.h2]: AnsieStyle;
	[ValidTags.h3]: AnsieStyle;
	[ValidTags.body]: AnsieStyle;
	[ValidTags.div]: AnsieStyle;
	[ValidTags.span]: AnsieStyle;
	[ValidTags.li]: AnsieStyle;
	[ValidTags.p]: AnsieStyle;
	[ValidTags.text]: AnsieStyle;
	[ValidTags.br]: AnsieStyle;
}
declare function setGlobalTheme(theme: AnsieTheme): void;
declare function getGlobalTheme(): AnsieTheme;
declare function compile(optionsOrMarkup: string | {
	markup: string;
	theme?: AnsieTheme;
	inputIncludesMarkdown?: boolean;
	output?: CompilerFormat;
}): string;
declare function tpl(strings: TemplateStringsArray, ...keys: (number | string)[]): string;
declare const _default: {
	compile: typeof compile;
	tpl: typeof tpl;
	console: {
		log: (message?: any, ...optionalParams: any[]) => void;
		error: (message?: any, ...optionalParams: any[]) => void;
		info: (message?: any, ...optionalParams: any[]) => void;
		warn: (message?: any, ...optionalParams: any[]) => void;
	};
	setGlobalTheme: typeof setGlobalTheme;
	getGlobalTheme: typeof getGlobalTheme;
};

export {
	_default as default,
};

export {};
